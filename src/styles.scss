@use "sass:map";
@use "~@angular/material" as mat;
@use "src/app/shared/styles/variables" as *;

$foreground: map.get($theme, foreground);
$primary: map.get($theme, primary);
$warn: map.get($theme, warn);
$accent: map.get($theme, accent);

body {
  margin: 0;
  background: $background;
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

* {
  box-sizing: border-box;
}

html,
body {
  position: relative;
  height: 100%;
  min-height: 100%;
}

abbr[title] {
  text-decoration: none;
}

a {
  text-decoration: none;
  color: mat.get-color-from-palette($primary);

  &.disabled-link {
    pointer-events: none;
    color: map.get($foreground, hint-text);
  }
}

button {
  .mat-icon,
  .mat-progress-spinner {
    display: inline-block !important;
    vertical-align: middle;

    & + span {
      margin-inline-start: 1ch;
    }
  }
}

button,
fieldset {
  &:disabled {
    opacity: 0.75;
  }
}

[hidden] {
  display: none;
}

.mat-button,
.mat-icon-button,
.mat-stroked-button,
.mat-flat-button,
.mat-raised-button {
  padding-block: 2px !important;
}

.mat-button,
.mat-stroked-button,
.mat-flat-button,
.mat-raised-button {
  padding-inline: 24px !important;
  border-radius: 60px !important;
}

.mat-stroked-button {
  border-width: 2px !important;

  &.mat-primary {
    border-color: mat.get-color-from-palette($primary);
  }

  &.mat-accent {
    border-color: mat.get-color-from-palette($accent);
  }

  &.mat-warn {
    border-color: mat.get-color-from-palette($warn);
  }
}

.mat-icon-button {
  line-height: 0 !important;
}

.mat-icon {
  vertical-align: bottom;
}

.mat-form-field {
  display: block !important;

  &:not(:last-child) {
    padding-block-end: 8px;
  }
}

.mat-form-field-suffix {
  & > .mat-button,
  & > .mat-icon-button,
  & > .mat-stroked-button,
  & > .mat-flat-button,
  & > .mat-raised-button {
    top: -0.25em;
  }
}

.mat-option {
  &.mat-active {
    background: map.get($primary, 50);
  }
}

.mat-dialog-title-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 16px;
  margin-block-end: 20px;

  .mat-dialog-title {
    margin-block-end: 0;
  }
}

.mat-table {
  border-collapse: collapse;

  &.clickable {
    tbody > tr {
      cursor: pointer;
      transition: all ease-in-out 0.1s;

      &:hover {
        background-color: map.get($primary, 50);
      }
    }
  }

  thead:first-of-type > tr:first-of-type {
    .mat-header-cell {
      border-block-start: 1px solid;
    }
  }

  thead:last-of-type > tr:last-of-type {
    .mat-header-cell {
      border-block-end: 3px solid;
    }
  }

  .mat-header-cell {
    white-space: nowrap;
    font-size: inherit;
    color: map.get($foreground, text);
  }

  .mat-cell,
  .mat-footer-cell,
  .mat-header-cell {
    border-color: rgba(#000, 0.24) !important;
    padding-inline: 12px !important;

    &.mat-table-sticky-border-elem-left {
      border-inline-end: 1px solid;
    }

    &.mat-table-sticky-border-elem-right {
      border-inline-start: 1px solid;
    }
  }
}

.mat-column-actions {
  text-align: center !important;
  width: 1px;
  white-space: nowrap;
}

.mat-card {
  border: 1px solid map.get($foreground, divider);
  border-radius: 6px !important;
  box-shadow: 0 2px 4px rgba(#000, 0.25) !important;
}

.mat-tab-labels {
  gap: 24px;
}

.mat-tab-label {
  min-width: unset !important;
  padding: unset !important;
  opacity: unset !important;
}

.mat-tab-group,
.mat-tab-nav-bar {
  &.mat-primary .mat-ink-bar {
    background: map.get($foreground, text);
  }
}

.mat-snack-bar-container {
  background: #fff;
  color: map.get($foreground, text);
  border: 1px solid map.get($foreground, text);
  margin-block-end: 76px !important;
}

.dialog-md {
  width: 640px;
  max-width: 100%;
}

.dialog-fullscreen {
  width: 100%;
  height: 100%;
  max-width: 100vw !important;

  .mat-dialog-container {
    padding: 0;
    border-radius: 0;
    overflow: hidden;

    & > * {
      display: block;
    }

    & > *,
    .mat-dialog-content,
    .dialog-content {
      width: 100%;
      height: 100%;
      max-height: none;
      padding: 0;
      margin: 0;
    }
  }
}

.dialog-no-padding {
  .mat-dialog-container {
    padding: 0;
    border-radius: 12px;
    overflow: hidden;
  }

  .dialog-content {
    padding: 24px;
    text-align: center;

    h3,
    h4 {
      margin: 0;

      mat-icon {
        width: 36px;
        height: 36px;
        font-size: 36px;
        margin-block-end: 8px;
      }
    }

    p {
      margin-block-end: 0;
    }
  }

  .dialog-actions {
    display: flex;
    flex-direction: column;

    & > * {
      padding-block: 4px !important;
      border-radius: 0 !important;
      border-block-start: 1px solid map.get($foreground, divider);
    }
  }

  &.dialog-warn {
    .dialog-content {
      h3,
      h4 {
        color: mat.get-color-from-palette($warn);
      }
    }
  }
}

.hidden {
  opacity: 0;
  z-index: -100;
}

.animate-hidden {
  transition: opacity 0.15s ease-in-out;
}

.init-spinner-wrapper {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  mat-spinner + * {
    margin-block-start: 8px;
  }
}

.text-primary {
  color: mat.get-color-from-palette($primary);
}

.text-warn {
  color: mat.get-color-from-palette($warn);
}

.text-accent {
  color: mat.get-color-from-palette($accent);
}

.text-hint {
  color: map.get($foreground, hint-text);
}

.text-bold {
  font-weight: 500;
}

.text-truncate {
  display: block;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-nowrap {
  white-space: nowrap;
}

.form-group-row {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 16px;
}

.form-actions {
  display: flex;
  gap: 8px;
}
